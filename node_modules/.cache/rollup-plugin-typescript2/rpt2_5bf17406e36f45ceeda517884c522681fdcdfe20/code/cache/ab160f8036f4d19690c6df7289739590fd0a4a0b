{"code":"// settings.ts\nimport { PluginSettingTab, Setting } from \"obsidian\";\nexport const DEFAULT_SETTINGS = {\n    booxFolder: \"Templates/Attachments\",\n    outputFolder: \"Books\",\n    citationStyle: \"MLA\",\n    namingConvention: \"TitleAuthor\",\n    importPDFs: true,\n    enableMetadataFetch: true,\n    scanIntervalSeconds: 60,\n};\nexport class BooxSyncSettingTab extends PluginSettingTab {\n    constructor(app, plugin) {\n        super(app, plugin);\n        this.plugin = plugin;\n    }\n    display() {\n        const { containerEl } = this;\n        containerEl.empty();\n        containerEl.createEl(\"h2\", { text: \"Boox Sync Plugin Settings\" });\n        new Setting(containerEl)\n            .setName(\"Boox Watch Folder\")\n            .setDesc(\"Folder to watch for Boox .txt highlight files\")\n            .addText(text => text\n            .setPlaceholder(\"Templates/Attachments\")\n            .setValue(this.plugin.settings.booxFolder)\n            .onChange(async (value) => {\n            this.plugin.settings.booxFolder = value.trim();\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName(\"Output Folder for Book Notes\")\n            .setDesc(\"Where to move finalized markdown book notes\")\n            .addText(text => text\n            .setPlaceholder(\"Books\")\n            .setValue(this.plugin.settings.outputFolder)\n            .onChange(async (value) => {\n            this.plugin.settings.outputFolder = value.trim();\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName(\"Citation Style\")\n            .setDesc(\"Choose the citation format to use in notes\")\n            .addDropdown(drop => drop\n            .addOption(\"MLA\", \"MLA\")\n            .addOption(\"APA\", \"APA\")\n            .addOption(\"Chicago\", \"Chicago\")\n            .setValue(this.plugin.settings.citationStyle)\n            .onChange(async (value) => {\n            this.plugin.settings.citationStyle = value;\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName(\"Note Naming Format\")\n            .setDesc(\"Choose how to name the created note files\")\n            .addDropdown(drop => drop\n            .addOption(\"TitleAuthor\", \"Title - Author\")\n            .addOption(\"TitleOnly\", \"Title Only\")\n            .setValue(this.plugin.settings.namingConvention)\n            .onChange(async (value) => {\n            this.plugin.settings.namingConvention = value;\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName(\"Import Handwritten PDFs\")\n            .setDesc(\"If enabled, also import Boox handwritten notes saved as PDFs\")\n            .addToggle(toggle => toggle\n            .setValue(this.plugin.settings.importPDFs)\n            .onChange(async (value) => {\n            this.plugin.settings.importPDFs = value;\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName(\"Enable Online Metadata Fetch\")\n            .setDesc(\"Use Google Books to auto-fill frontmatter metadata if missing\")\n            .addToggle(toggle => toggle\n            .setValue(this.plugin.settings.enableMetadataFetch)\n            .onChange(async (value) => {\n            this.plugin.settings.enableMetadataFetch = value;\n            await this.plugin.saveSettings();\n        }));\n        new Setting(containerEl)\n            .setName(\"Scan Interval (seconds)\")\n            .setDesc(\"How often to scan the watch folder for new files\")\n            .addText(text => text\n            .setPlaceholder(\"60\")\n            .setValue(this.plugin.settings.scanIntervalSeconds.toString())\n            .onChange(async (value) => {\n            const parsed = parseInt(value);\n            if (!isNaN(parsed)) {\n                this.plugin.settings.scanIntervalSeconds = parsed;\n                await this.plugin.saveSettings();\n            }\n        }));\n    }\n}\n","references":["/Users/muhammad_saadiq/Documents/@L-P/Obsidian/ArRahman/BooxSync-Starter/node_modules/obsidian/obsidian.d.ts","/Users/muhammad_saadiq/Documents/@L-P/Obsidian/ArRahman/BooxSync-Starter/src/main.ts"]}
