{"code":"// Book template logic here\nimport { normalizePath, TFile } from \"obsidian\";\nconst DEFAULT_TEMPLATE_CONTENT = `---\ntitle: {{title}}\nauthor: {{author}}\npublisher: {{publisher}}\npublishdate: {{publishDate}}\npages: {{totalPage}}\nISBN10: {{ISBN10}}\nISBN13: {{ISBN13}}\nsource: {{source}}\nurl: {{url}}\ndate: {{date}}\ntags: []\nrating:\ndate read:\nstatus:\nhow read:\nhighlights:\nmodified: <% tp.file.last_modified_date(\"dddd Do MMMM YYYY HH:mm:ss\") %>\n---\n\n[[Favorite Books]] | [[To Read List]]\n\n## Summary\n\n> [!abstract] Summary  \n> Contents\n\n## Thesis\n\n> [!question] Main Points  \n> What was the author trying to say?\n\n## Antithesis\n\n> [!question] Disagreements  \n> Points you took issue with.\n\n## Synthesis\n\n> [!question] Middle Ground  \n> How would you reconcile opposing ideas?\n\n## Related\n\n> [!note] Related Topics\n\n## Highlights\n`;\nconst DEFAULT_TEMPLATE_PATH = \"Templates/BooxBookTemplate.md\";\nexport async function ensureDefaultTemplateExists(app) {\n    const path = normalizePath(DEFAULT_TEMPLATE_PATH);\n    let template = app.vault.getAbstractFileByPath(path);\n    if (!template) {\n        await app.vault.create(path, DEFAULT_TEMPLATE_CONTENT);\n        console.log(\"[Boox Sync] Default book template created at\", path);\n    }\n}\nexport async function loadTemplate(app, metadata) {\n    const path = normalizePath(DEFAULT_TEMPLATE_PATH);\n    let file = app.vault.getAbstractFileByPath(path);\n    if (!file || !(file instanceof TFile)) {\n        await ensureDefaultTemplateExists(app);\n        file = app.vault.getAbstractFileByPath(path);\n    }\n    if (!file || !(file instanceof TFile)) {\n        throw new Error(\"Book template file not found or not a valid markdown file.\");\n    }\n    const raw = await app.vault.read(file);\n    let output = raw;\n    for (const key in metadata) {\n        output = output.replace(new RegExp(`{{${key}}}`, \"g\"), metadata[key]);\n    }\n    return output;\n}\n","references":["/Users/muhammad_saadiq/Documents/@L-P/Obsidian/ArRahman/BooxSync-Starter/node_modules/obsidian/obsidian.d.ts"]}
